get bounds of operational areas:

jarek@x1:~/projects/electric2go$ python
>>> import city
>>> city.get_lat_long_extent('milano')
(9.27821, 9.066236, 45.535522, 45.398983)

(some cities have operational 'islands' that would inconveniently stretch visualization, particularly north-south - you might need to manually code to exclude them, adapting code in city.py)

paste these into city.py BOUNDS dict for the city


unfortunately OSM seems to have changed their PNG export interface so finding correct dimensions for the map will take a bit of trial and error

start with this URL:

http://render.openstreetmap.org/cgi-bin/export?bbox=WEST,SOUTH,EAST,NORTH&scale=69333&format=png

aka

http://render.openstreetmap.org/cgi-bin/export?bbox=WEST,SOUTH,EAST,NORTH&scale=69333&format=png


check the size of the exported image, then adjust scale to get desired size in the limiting dimension. (if you want to do 16:9 ratio, the north-south dimension will almost always be the limiting one)

then symmetrically expand the limits in the other dimension to get the pixel direction correct.

assuming we're expanding east-west:
- divide desired horizontal dimension of the image by the current one: e.g. 1920/653 = 2.940275651
- find the midpoint with (EAST_LONG+WEST_LONG)/2, and how much longitude is on either side: e.g. (-73.662 + -73.548) / 2 = -73.605 with +/- 0.057
- scale either side: 2.940275651Ã—0.057 = 0.167595712
- new dimensions will be -73.605 with +/- 0.167595712 => -73.772595712, -73.437404288
- might need to adjust this a tiny bit to get the right pixel dimension, I got 1922x1080 with the exact numbers and had to trim to -73.7725, -73.4375. try to keep the centre in the same position (-73.7725 + -73.4375)/2 = -73.605


put the adjusted limits into city.py MAP_LIMITS dict for the city. put the scale and the direct URL in a comment

greyscale the map image: in gimp, do hue/lightness/saturation and change lightness = 100, saturation = -100

then pngcrush to make the file size smaller

